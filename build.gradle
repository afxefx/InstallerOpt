apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def value = 0
        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1;
        }

        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        def version_Code = versionProps['VERSION_CODE'].toInteger() + 1

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_CODE'] = version_Code.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId 'net.fypm.InstallerOpt'
            versionCode version_Code
            versionName "${versionMajor}.${versionMinor}.${versionPatch} (${versionBuild})"
            minSdkVersion 15
            targetSdkVersion 23
            /*resConfigs "en"*/
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //def date = new Date();
                    //def formattedDate = date.format('yyyyMMddHHmmss')
                    output.outputFile = new File(output.outputFile.parent,
                            output.outputFile.name.replace("app-release", "net.fypm.InstallerOpt" + versionName + "-release")
                            //output.outputFile.name.replace("-release", "-" + formattedDate)
                            //for Debug use output.outputFile = new File(output.outputFile.parent,
                                                         //output.outputFile.name.replace("-debug", "-" + formattedDate)
                    )
                }
            }
                }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    //def date = new Date();
                    //def formattedDate = date.format('yyyyMMddHHmmss')
                    output.outputFile = new File(output.outputFile.parent,
                            output.outputFile.name.replace("app-debug", "net.fypm.InstallerOpt" + versionName + " " + versionCode + "-debug")
                            //for Debug use output.outputFile = new File(output.outputFile.parent,
                                                         //output.outputFile.name.replace("-debug", "-" + formattedDate)
                    )
                }
            }
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/java'
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.0.0'
    /*compile 'com.crossbowffs.remotepreferences:remotepreferences:0.1'*/
    compile 'com.android.support:support-annotations:23.0.0'
    compile 'net.rdrei.android.dirchooser:library:3.2@aar'
    compile 'com.gu:option:1.3'
}

repositories {
    jcenter();
    maven { url 'http://guardian.github.com/maven/repo-releases' }
}

dependencies {
    provided 'de.robv.android.xposed:api:82'
}